### YamlMime:TSType
name: SchemaRegistry
uid: '@azure/schema-registry.SchemaRegistry'
package: '@azure/schema-registry'
summary: |
  Represents a store of registered schemas.
  Implemented by SchemaRegistryClient to store the schemas using the Azure
  Schema Registry service.
fullName: SchemaRegistry
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'getSchema(string, GetSchemaOptions)'
    uid: '@azure/schema-registry.SchemaRegistry.getSchema'
    package: '@azure/schema-registry'
    summary: Gets an existing schema by ID.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSchema(schemaId: string, options?: GetSchemaOptions):
        Promise<Schema>
      parameters:
        - id: schemaId
          type: string
          description: Unique schema ID.
        - id: options
          type: <xref uid="@azure/schema-registry.GetSchemaOptions" />
          description: ''
      return:
        description: Schema with given ID.
        type: Promise&lt;<xref uid="@azure/schema-registry.Schema" />&gt;
  - name: 'getSchemaProperties(SchemaDescription, GetSchemaPropertiesOptions)'
    uid: '@azure/schema-registry.SchemaRegistry.getSchemaProperties'
    package: '@azure/schema-registry'
    summary: |-
      Gets the ID of an existing schema with matching name, group, type, and
      definition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getSchemaProperties(schema: SchemaDescription, options?:
        GetSchemaPropertiesOptions): Promise<SchemaProperties>
      parameters:
        - id: schema
          type: <xref uid="@azure/schema-registry.SchemaDescription" />
          description: Schema to match.
        - id: options
          type: <xref uid="@azure/schema-registry.GetSchemaPropertiesOptions" />
          description: ''
      return:
        description: Matched schema's ID.
        type: Promise&lt;<xref uid="@azure/schema-registry.SchemaProperties" />&gt;
  - name: 'registerSchema(SchemaDescription, RegisterSchemaOptions)'
    uid: '@azure/schema-registry.SchemaRegistry.registerSchema'
    package: '@azure/schema-registry'
    summary: >
      Registers a new schema and returns its ID.

      If schema of specified name does not exist in the specified group, a
      schema

      is created at version 1. If schema of specified name exists already in

      specified group, schema is created at latest version + 1.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function registerSchema(schema: SchemaDescription, options?:
        RegisterSchemaOptions): Promise<SchemaProperties>
      parameters:
        - id: schema
          type: <xref uid="@azure/schema-registry.SchemaDescription" />
          description: Schema to register.
        - id: options
          type: <xref uid="@azure/schema-registry.RegisterSchemaOptions" />
          description: ''
      return:
        description: Registered schema's ID.
        type: Promise&lt;<xref uid="@azure/schema-registry.SchemaProperties" />&gt;
