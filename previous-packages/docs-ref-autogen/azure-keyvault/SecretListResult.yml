### YamlMime:TSType
name: SecretListResult
uid: azure-keyvault.SecretListResult
package: azure-keyvault
summary: ''
fullName: SecretListResult
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: Array
    uid: azure-keyvault.SecretListResult.Array
    package: azure-keyvault
    summary: ''
    fullName: Array
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        description: ''
        type: ArrayConstructor
  - name: nextLink
    uid: azure-keyvault.SecretListResult.nextLink
    package: azure-keyvault
    summary: ''
    fullName: nextLink
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'nextLink?: string'
      return:
        description: ''
        type: string
inheritedProperties:
  - name: length
    uid: azure-keyvault.SecretListResult.length
    package: azure-keyvault
    summary: >-
      Gets or sets the length of the array. This is a number one higher than the
      highest element defined in an array.
    fullName: length
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'length: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Array.length
inheritedMethods:
  - name: 'concat((T | ConcatArray<T>)[])'
    uid: azure-keyvault.SecretListResult.concat_1
    package: azure-keyvault
    summary: Combines two or more arrays.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function concat(items: (T | ConcatArray<T>)[]): SecretItem[]'
      parameters:
        - id: items
          type: '(T | ConcatArray&lt;T&gt;)[]'
          description: |
            Additional items to add to the end of array1.
      return:
        description: ''
        type: '<xref uid="azure-keyvault.SecretItem" />[]'
    inheritanceDescription: <b>Inherited From</b> Array.concat
  - name: 'concat(ConcatArray<SecretItem>[])'
    uid: azure-keyvault.SecretListResult.concat
    package: azure-keyvault
    summary: Combines two or more arrays.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function concat(items: ConcatArray<SecretItem>[]): SecretItem[]'
      parameters:
        - id: items
          type: 'ConcatArray&lt;<xref uid="azure-keyvault.SecretItem" />&gt;[]'
          description: |
            Additional items to add to the end of array1.
      return:
        description: ''
        type: '<xref uid="azure-keyvault.SecretItem" />[]'
    inheritanceDescription: <b>Inherited From</b> Array.concat
  - name: >-
      every((value: SecretItem, index: number, array: SecretItem[]) => unknown,
      any)
    uid: azure-keyvault.SecretListResult.every
    package: azure-keyvault
    summary: Determines whether all the members of an array satisfy the specified test.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function every(callbackfn: (value: SecretItem, index: number, array:
        SecretItem[]) => unknown, thisArg?: any): boolean
      parameters:
        - id: callbackfn
          type: >-
            (value: SecretItem, index: number, array: SecretItem[]) =&gt;
            unknown
          description: >-
            A function that accepts up to three arguments. The every method
            calls the callbackfn function for each element in array1 until the
            callbackfn returns false, or until the end of the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Array.every
  - name: >-
      filter((value: SecretItem, index: number, array: SecretItem[]) => unknown,
      any)
    uid: azure-keyvault.SecretListResult.filter_1
    package: azure-keyvault
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function filter(callbackfn: (value: SecretItem, index: number, array:
        SecretItem[]) => unknown, thisArg?: any): SecretItem[]
      parameters:
        - id: callbackfn
          type: >-
            (value: SecretItem, index: number, array: SecretItem[]) =&gt;
            unknown
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the callbackfn function one time for each element in the
            array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        description: ''
        type: '<xref uid="azure-keyvault.SecretItem" />[]'
    inheritanceDescription: <b>Inherited From</b> Array.filter
  - name: >-
      filter<S>((value: SecretItem, index: number, array: SecretItem[]) =>
      boolean, any)
    uid: azure-keyvault.SecretListResult.filter
    package: azure-keyvault
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function filter<S>(callbackfn: (value: SecretItem, index: number, array:
        SecretItem[]) => boolean, thisArg?: any): S[]
      parameters:
        - id: callbackfn
          type: >-
            (value: SecretItem, index: number, array: SecretItem[]) =&gt;
            boolean
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the callbackfn function one time for each element in the
            array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        description: ''
        type: 'S[]'
    inheritanceDescription: <b>Inherited From</b> Array.filter
  - name: >-
      forEach((value: SecretItem, index: number, array: SecretItem[]) => void,
      any)
    uid: azure-keyvault.SecretListResult.forEach
    package: azure-keyvault
    summary: Performs the specified action for each element in an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function forEach(callbackfn: (value: SecretItem, index: number, array:
        SecretItem[]) => void, thisArg?: any)
      parameters:
        - id: callbackfn
          type: '(value: SecretItem, index: number, array: SecretItem[]) =&gt; void'
          description: >-
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
    inheritanceDescription: <b>Inherited From</b> Array.forEach
  - name: 'indexOf(SecretItem, number)'
    uid: azure-keyvault.SecretListResult.indexOf
    package: azure-keyvault
    summary: Returns the index of the first occurrence of a value in an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function indexOf(searchElement: SecretItem, fromIndex?: number): number'
      parameters:
        - id: searchElement
          type: <xref uid="azure-keyvault.SecretItem" />
          description: The value to locate in the array.
        - id: fromIndex
          type: number
          description: >
            The array index at which to begin the search. If fromIndex is
            omitted, the search starts at index 0.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Array.indexOf
  - name: join(string)
    uid: azure-keyvault.SecretListResult.join
    package: azure-keyvault
    summary: >-
      Adds all the elements of an array separated by the specified separator
      string.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function join(separator?: string): string'
      parameters:
        - id: separator
          type: string
          description: >
            A string used to separate one element of an array from the next in
            the resulting String. If omitted, the array elements are separated
            with a comma.
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Array.join
  - name: 'lastIndexOf(SecretItem, number)'
    uid: azure-keyvault.SecretListResult.lastIndexOf
    package: azure-keyvault
    summary: Returns the index of the last occurrence of a specified value in an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function lastIndexOf(searchElement: SecretItem, fromIndex?: number):
        number
      parameters:
        - id: searchElement
          type: <xref uid="azure-keyvault.SecretItem" />
          description: The value to locate in the array.
        - id: fromIndex
          type: number
          description: >
            The array index at which to begin the search. If fromIndex is
            omitted, the search starts at the last index in the array.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Array.lastIndexOf
  - name: 'map<U>((value: SecretItem, index: number, array: SecretItem[]) => U, any)'
    uid: azure-keyvault.SecretListResult.map
    package: azure-keyvault
    summary: >-
      Calls a defined callback function on each element of an array, and returns
      an array that contains the results.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function map<U>(callbackfn: (value: SecretItem, index: number, array:
        SecretItem[]) => U, thisArg?: any): U[]
      parameters:
        - id: callbackfn
          type: '(value: SecretItem, index: number, array: SecretItem[]) =&gt; U'
          description: >-
            A function that accepts up to three arguments. The map method calls
            the callbackfn function one time for each element in the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        description: ''
        type: 'U[]'
    inheritanceDescription: <b>Inherited From</b> Array.map
  - name: pop()
    uid: azure-keyvault.SecretListResult.pop
    package: azure-keyvault
    summary: Removes the last element from an array and returns it.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function pop(): SecretItem | undefined'
      return:
        description: ''
        type: <xref uid="azure-keyvault.SecretItem" /> | undefined
    inheritanceDescription: <b>Inherited From</b> Array.pop
  - name: 'push(SecretItem[])'
    uid: azure-keyvault.SecretListResult.push
    package: azure-keyvault
    summary: 'Appends new elements to an array, and returns the new length of the array.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function push(items: SecretItem[]): number'
      parameters:
        - id: items
          type: '<xref uid="azure-keyvault.SecretItem" />[]'
          description: |
            New elements of the Array.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Array.push
  - name: >-
      reduce((previousValue: SecretItem, currentValue: SecretItem, currentIndex:
      number, array: SecretItem[]) => SecretItem)
    uid: azure-keyvault.SecretListResult.reduce
    package: azure-keyvault
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: SecretItem, currentValue:
        SecretItem, currentIndex: number, array: SecretItem[]) => SecretItem):
        SecretItem
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: SecretItem, currentValue: SecretItem, currentIndex:
            number, array: SecretItem[]) =&gt; SecretItem
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
      return:
        description: ''
        type: <xref uid="azure-keyvault.SecretItem" />
    inheritanceDescription: <b>Inherited From</b> Array.reduce
  - name: >-
      reduce((previousValue: SecretItem, currentValue: SecretItem, currentIndex:
      number, array: SecretItem[]) => SecretItem, SecretItem)
    uid: azure-keyvault.SecretListResult.reduce_1
    package: azure-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: SecretItem, currentValue:
        SecretItem, currentIndex: number, array: SecretItem[]) => SecretItem,
        initialValue: SecretItem): SecretItem
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: SecretItem, currentValue: SecretItem, currentIndex:
            number, array: SecretItem[]) =&gt; SecretItem
          description: ''
        - id: initialValue
          type: <xref uid="azure-keyvault.SecretItem" />
          description: ''
      return:
        description: ''
        type: <xref uid="azure-keyvault.SecretItem" />
    inheritanceDescription: <b>Inherited From</b> Array.reduce
  - name: >-
      reduce<U>((previousValue: U, currentValue: SecretItem, currentIndex:
      number, array: SecretItem[]) => U, U)
    uid: azure-keyvault.SecretListResult.reduce_2
    package: azure-keyvault
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduce<U>(callbackfn: (previousValue: U, currentValue:
        SecretItem, currentIndex: number, array: SecretItem[]) => U,
        initialValue: U): U
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: U, currentValue: SecretItem, currentIndex: number,
            array: SecretItem[]) =&gt; U
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type: U
          description: >
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        description: ''
        type: U
    inheritanceDescription: <b>Inherited From</b> Array.reduce
  - name: >-
      reduceRight((previousValue: SecretItem, currentValue: SecretItem,
      currentIndex: number, array: SecretItem[]) => SecretItem)
    uid: azure-keyvault.SecretListResult.reduceRight
    package: azure-keyvault
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: SecretItem,
        currentValue: SecretItem, currentIndex: number, array: SecretItem[]) =>
        SecretItem): SecretItem
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: SecretItem, currentValue: SecretItem, currentIndex:
            number, array: SecretItem[]) =&gt; SecretItem
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
      return:
        description: ''
        type: <xref uid="azure-keyvault.SecretItem" />
    inheritanceDescription: <b>Inherited From</b> Array.reduceRight
  - name: >-
      reduceRight((previousValue: SecretItem, currentValue: SecretItem,
      currentIndex: number, array: SecretItem[]) => SecretItem, SecretItem)
    uid: azure-keyvault.SecretListResult.reduceRight_1
    package: azure-keyvault
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: SecretItem,
        currentValue: SecretItem, currentIndex: number, array: SecretItem[]) =>
        SecretItem, initialValue: SecretItem): SecretItem
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: SecretItem, currentValue: SecretItem, currentIndex:
            number, array: SecretItem[]) =&gt; SecretItem
          description: ''
        - id: initialValue
          type: <xref uid="azure-keyvault.SecretItem" />
          description: ''
      return:
        description: ''
        type: <xref uid="azure-keyvault.SecretItem" />
    inheritanceDescription: <b>Inherited From</b> Array.reduceRight
  - name: >-
      reduceRight<U>((previousValue: U, currentValue: SecretItem, currentIndex:
      number, array: SecretItem[]) => U, U)
    uid: azure-keyvault.SecretListResult.reduceRight_2
    package: azure-keyvault
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight<U>(callbackfn: (previousValue: U, currentValue:
        SecretItem, currentIndex: number, array: SecretItem[]) => U,
        initialValue: U): U
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: U, currentValue: SecretItem, currentIndex: number,
            array: SecretItem[]) =&gt; U
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type: U
          description: >
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        description: ''
        type: U
    inheritanceDescription: <b>Inherited From</b> Array.reduceRight
  - name: reverse()
    uid: azure-keyvault.SecretListResult.reverse
    package: azure-keyvault
    summary: Reverses the elements in an Array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function reverse(): SecretItem[]'
      return:
        description: ''
        type: '<xref uid="azure-keyvault.SecretItem" />[]'
    inheritanceDescription: <b>Inherited From</b> Array.reverse
  - name: shift()
    uid: azure-keyvault.SecretListResult.shift
    package: azure-keyvault
    summary: Removes the first element from an array and returns it.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function shift(): SecretItem | undefined'
      return:
        description: ''
        type: <xref uid="azure-keyvault.SecretItem" /> | undefined
    inheritanceDescription: <b>Inherited From</b> Array.shift
  - name: 'slice(number, number)'
    uid: azure-keyvault.SecretListResult.slice
    package: azure-keyvault
    summary: Returns a section of an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function slice(start?: number, end?: number): SecretItem[]'
      parameters:
        - id: start
          type: number
          description: The beginning of the specified portion of the array.
        - id: end
          type: number
          description: |
            The end of the specified portion of the array.
      return:
        description: ''
        type: '<xref uid="azure-keyvault.SecretItem" />[]'
    inheritanceDescription: <b>Inherited From</b> Array.slice
  - name: >-
      some((value: SecretItem, index: number, array: SecretItem[]) => unknown,
      any)
    uid: azure-keyvault.SecretListResult.some
    package: azure-keyvault
    summary: >-
      Determines whether the specified callback function returns true for any
      element of an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function some(callbackfn: (value: SecretItem, index: number, array:
        SecretItem[]) => unknown, thisArg?: any): boolean
      parameters:
        - id: callbackfn
          type: >-
            (value: SecretItem, index: number, array: SecretItem[]) =&gt;
            unknown
          description: >-
            A function that accepts up to three arguments. The some method calls
            the callbackfn function for each element in array1 until the
            callbackfn returns true, or until the end of the array.
        - id: thisArg
          type: any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Array.some
  - name: 'sort((a: SecretItem, b: SecretItem) => number)'
    uid: azure-keyvault.SecretListResult.sort
    package: azure-keyvault
    summary: Sorts an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sort(compareFn?: (a: SecretItem, b: SecretItem) => number):
        this
      parameters:
        - id: compareFn
          type: '(a: SecretItem, b: SecretItem) =&gt; number'
          description: >
            The name of the function used to determine the order of the
            elements. If omitted, the elements are sorted in ascending, ASCII
            character order.
      return:
        description: ''
        type: this
    inheritanceDescription: <b>Inherited From</b> Array.sort
  - name: 'splice(number, number)'
    uid: azure-keyvault.SecretListResult.splice
    package: azure-keyvault
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function splice(start: number, deleteCount?: number): SecretItem[]'
      parameters:
        - id: start
          type: number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type: number
          description: |
            The number of elements to remove.
      return:
        description: ''
        type: '<xref uid="azure-keyvault.SecretItem" />[]'
    inheritanceDescription: <b>Inherited From</b> Array.splice
  - name: 'splice(number, number, SecretItem[])'
    uid: azure-keyvault.SecretListResult.splice_1
    package: azure-keyvault
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function splice(start: number, deleteCount: number, items:
        SecretItem[]): SecretItem[]
      parameters:
        - id: start
          type: number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type: number
          description: The number of elements to remove.
        - id: items
          type: '<xref uid="azure-keyvault.SecretItem" />[]'
          description: |
            Elements to insert into the array in place of the deleted elements.
      return:
        description: ''
        type: '<xref uid="azure-keyvault.SecretItem" />[]'
    inheritanceDescription: <b>Inherited From</b> Array.splice
  - name: toLocaleString()
    uid: azure-keyvault.SecretListResult.toLocaleString
    package: azure-keyvault
    summary: >-
      Returns a string representation of an array. The elements are converted to
      string using their toLocalString methods.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toLocaleString(): string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Array.toLocaleString
  - name: toString()
    uid: azure-keyvault.SecretListResult.toString
    package: azure-keyvault
    summary: Returns a string representation of an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toString(): string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Array.toString
  - name: 'unshift(SecretItem[])'
    uid: azure-keyvault.SecretListResult.unshift
    package: azure-keyvault
    summary: Inserts new elements at the start of an array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function unshift(items: SecretItem[]): number'
      parameters:
        - id: items
          type: '<xref uid="azure-keyvault.SecretItem" />[]'
          description: |
            Elements to insert at the start of the Array.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Array.unshift
extends: Array&lt;<xref uid="azure-keyvault.SecretItem" />&gt;
