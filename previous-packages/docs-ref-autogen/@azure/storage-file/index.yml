### YamlMime:TSPackage
uid: '@azure/storage-file'
name: '@azure/storage-file'
summary: ''
type: package
classes:
  - '@azure/storage-file.Aborter'
  - '@azure/storage-file.AccountSASPermissions'
  - '@azure/storage-file.AccountSASResourceTypes'
  - '@azure/storage-file.AccountSASServices'
  - '@azure/storage-file.BrowserPolicyFactory'
  - '@azure/storage-file.DirectoryURL'
  - '@azure/storage-file.FileSASPermissions'
  - '@azure/storage-file.FileSystemAttributes'
  - '@azure/storage-file.FileURL'
  - '@azure/storage-file.KeepAlivePolicyFactory'
  - '@azure/storage-file.LoggingPolicyFactory'
  - '@azure/storage-file.Pipeline'
  - '@azure/storage-file.RetryPolicyFactory'
  - '@azure/storage-file.SASQueryParameters'
  - '@azure/storage-file.ServiceURL'
  - '@azure/storage-file.ShareSASPermissions'
  - '@azure/storage-file.ShareURL'
  - '@azure/storage-file.StorageURL'
  - '@azure/storage-file.TelemetryPolicyFactory'
  - '@azure/storage-file.UniqueRequestIDPolicyFactory'
  - '@azure/storage-file.AnonymousCredential'
  - '@azure/storage-file.Credential'
  - '@azure/storage-file.SharedKeyCredential'
  - '@azure/storage-file.Directory'
  - '@azure/storage-file.File'
  - '@azure/storage-file.Service'
  - '@azure/storage-file.Share'
  - '@azure/storage-file.StorageClient'
  - '@azure/storage-file.StorageClientContext'
  - '@azure/storage-file.AnonymousCredentialPolicy'
  - '@azure/storage-file.BrowserPolicy'
  - '@azure/storage-file.CredentialPolicy'
  - '@azure/storage-file.KeepAlivePolicy'
  - '@azure/storage-file.LoggingPolicy'
  - '@azure/storage-file.RetryPolicy'
  - '@azure/storage-file.SharedKeyCredentialPolicy'
  - '@azure/storage-file.TelemetryPolicy'
  - '@azure/storage-file.UniqueRequestIDPolicy'
  - '@azure/storage-file.Batch'
  - '@azure/storage-file.BufferScheduler'
  - '@azure/storage-file.RetriableReadableStream'
interfaces:
  - '@azure/storage-file.IDirectoryCreateOptions'
  - '@azure/storage-file.IDirectoryForceCloseHandlesSegmentOptions'
  - '@azure/storage-file.IDirectoryListFilesAndDirectoriesSegmentOptions'
  - '@azure/storage-file.IDirectoryListHandlesSegmentOptions'
  - '@azure/storage-file.IDirectoryProperties'
  - '@azure/storage-file.IFileCreateOptions'
  - '@azure/storage-file.IFileDownloadOptions'
  - '@azure/storage-file.IFileGetRangeListOptions'
  - '@azure/storage-file.IFileListHandlesSegmentOptions'
  - '@azure/storage-file.IFileProperties'
  - '@azure/storage-file.IFileStartCopyOptions'
  - '@azure/storage-file.IFileUploadRangeOptions'
  - '@azure/storage-file.ISetPropertiesResponse'
  - '@azure/storage-file.IAccountSASSignatureValues'
  - '@azure/storage-file.IFileSASSignatureValues'
  - '@azure/storage-file.IIPRange'
  - '@azure/storage-file.IRange'
  - '@azure/storage-file.IKeepAliveOptions'
  - '@azure/storage-file.IRequestLogOptions'
  - '@azure/storage-file.IPipelineOptions'
  - '@azure/storage-file.IRetryOptions'
  - '@azure/storage-file.IServiceListSharesSegmentOptions'
  - '@azure/storage-file.IShareCreateOptions'
  - '@azure/storage-file.IShareCreateSnapshotOptions'
  - '@azure/storage-file.IShareDeleteMethodOptions'
  - '@azure/storage-file.ISignedIdentifier'
  - '@azure/storage-file.INewPipelineOptions'
  - '@azure/storage-file.ITelemetryOptions'
  - '@azure/storage-file.AccessPolicy'
  - '@azure/storage-file.CorsRule'
  - '@azure/storage-file.DirectoryCreateHeaders'
  - '@azure/storage-file.DirectoryCreateOptionalParams'
  - '@azure/storage-file.DirectoryDeleteHeaders'
  - '@azure/storage-file.DirectoryDeleteMethodOptionalParams'
  - '@azure/storage-file.DirectoryForceCloseHandlesHeaders'
  - '@azure/storage-file.DirectoryForceCloseHandlesOptionalParams'
  - '@azure/storage-file.DirectoryGetPropertiesHeaders'
  - '@azure/storage-file.DirectoryGetPropertiesOptionalParams'
  - '@azure/storage-file.DirectoryItem'
  - '@azure/storage-file.DirectoryListFilesAndDirectoriesSegmentHeaders'
  - '@azure/storage-file.DirectoryListFilesAndDirectoriesSegmentOptionalParams'
  - '@azure/storage-file.DirectoryListHandlesHeaders'
  - '@azure/storage-file.DirectoryListHandlesOptionalParams'
  - '@azure/storage-file.DirectorySetMetadataHeaders'
  - '@azure/storage-file.DirectorySetMetadataOptionalParams'
  - '@azure/storage-file.DirectorySetPropertiesHeaders'
  - '@azure/storage-file.DirectorySetPropertiesOptionalParams'
  - '@azure/storage-file.FileAbortCopyHeaders'
  - '@azure/storage-file.FileAbortCopyOptionalParams'
  - '@azure/storage-file.FileCreateHeaders'
  - '@azure/storage-file.FileCreateOptionalParams'
  - '@azure/storage-file.FileDeleteHeaders'
  - '@azure/storage-file.FileDeleteMethodOptionalParams'
  - '@azure/storage-file.FileDownloadHeaders'
  - '@azure/storage-file.FileDownloadOptionalParams'
  - '@azure/storage-file.FileForceCloseHandlesHeaders'
  - '@azure/storage-file.FileForceCloseHandlesOptionalParams'
  - '@azure/storage-file.FileGetPropertiesHeaders'
  - '@azure/storage-file.FileGetPropertiesOptionalParams'
  - '@azure/storage-file.FileGetRangeListHeaders'
  - '@azure/storage-file.FileGetRangeListOptionalParams'
  - '@azure/storage-file.FileHTTPHeaders'
  - '@azure/storage-file.FileItem'
  - '@azure/storage-file.FileListHandlesHeaders'
  - '@azure/storage-file.FileListHandlesOptionalParams'
  - '@azure/storage-file.FileProperty'
  - '@azure/storage-file.FileSetHTTPHeadersHeaders'
  - '@azure/storage-file.FileSetHTTPHeadersOptionalParams'
  - '@azure/storage-file.FileSetMetadataHeaders'
  - '@azure/storage-file.FileSetMetadataOptionalParams'
  - '@azure/storage-file.FileStartCopyHeaders'
  - '@azure/storage-file.FileStartCopyOptionalParams'
  - '@azure/storage-file.FileUploadRangeFromURLHeaders'
  - '@azure/storage-file.FileUploadRangeFromURLOptionalParams'
  - '@azure/storage-file.FileUploadRangeHeaders'
  - '@azure/storage-file.FileUploadRangeOptionalParams'
  - '@azure/storage-file.FilesAndDirectoriesListSegment'
  - '@azure/storage-file.HandleItem'
  - '@azure/storage-file.ListFilesAndDirectoriesSegmentResponse'
  - '@azure/storage-file.ListHandlesResponse'
  - '@azure/storage-file.ListSharesResponse'
  - '@azure/storage-file.Metrics'
  - '@azure/storage-file.Permission'
  - '@azure/storage-file.Range'
  - '@azure/storage-file.RetentionPolicy'
  - '@azure/storage-file.ServiceGetPropertiesHeaders'
  - '@azure/storage-file.ServiceGetPropertiesOptionalParams'
  - '@azure/storage-file.ServiceListSharesSegmentHeaders'
  - '@azure/storage-file.ServiceListSharesSegmentOptionalParams'
  - '@azure/storage-file.ServiceSetPropertiesHeaders'
  - '@azure/storage-file.ServiceSetPropertiesOptionalParams'
  - '@azure/storage-file.ShareCreateHeaders'
  - '@azure/storage-file.ShareCreateOptionalParams'
  - '@azure/storage-file.ShareCreatePermissionHeaders'
  - '@azure/storage-file.ShareCreatePermissionOptionalParams'
  - '@azure/storage-file.ShareCreateSnapshotHeaders'
  - '@azure/storage-file.ShareCreateSnapshotOptionalParams'
  - '@azure/storage-file.ShareDeleteHeaders'
  - '@azure/storage-file.ShareDeleteMethodOptionalParams'
  - '@azure/storage-file.ShareGetAccessPolicyHeaders'
  - '@azure/storage-file.ShareGetAccessPolicyOptionalParams'
  - '@azure/storage-file.ShareGetPermissionHeaders'
  - '@azure/storage-file.ShareGetPermissionOptionalParams'
  - '@azure/storage-file.ShareGetPropertiesHeaders'
  - '@azure/storage-file.ShareGetPropertiesOptionalParams'
  - '@azure/storage-file.ShareGetStatisticsHeaders'
  - '@azure/storage-file.ShareGetStatisticsOptionalParams'
  - '@azure/storage-file.ShareItem'
  - '@azure/storage-file.ShareProperties'
  - '@azure/storage-file.ShareSetAccessPolicyHeaders'
  - '@azure/storage-file.ShareSetAccessPolicyOptionalParams'
  - '@azure/storage-file.ShareSetMetadataHeaders'
  - '@azure/storage-file.ShareSetMetadataOptionalParams'
  - '@azure/storage-file.ShareSetQuotaHeaders'
  - '@azure/storage-file.ShareSetQuotaOptionalParams'
  - '@azure/storage-file.ShareStats'
  - '@azure/storage-file.SignedIdentifier'
  - '@azure/storage-file.SourceModifiedAccessConditions'
  - '@azure/storage-file.StorageError'
  - '@azure/storage-file.StorageServiceProperties'
  - '@azure/storage-file.IDownloadFromAzureFileOptions'
  - '@azure/storage-file.IUploadToAzureFileOptions'
  - '@azure/storage-file.IUploadStreamToAzureFileOptions'
  - '@azure/storage-file.IFileAndDirectoryCreateCommonOptions'
  - '@azure/storage-file.IFileAndDirectorySetPropertiesCommonOptions'
  - '@azure/storage-file.IFileHTTPHeaders'
  - '@azure/storage-file.IMetadata'
  - '@azure/storage-file.IRetriableReadableStreamOptions'
typeAliases:
  - '@azure/storage-file.FileDownloadResponse'
  - '@azure/storage-file.FileGetRangeListResponse'
  - '@azure/storage-file.ShareGetAccessPolicyResponse'
  - '@azure/storage-file.ShareGetStatisticsResponse'
  - '@azure/storage-file.CredentialPolicyCreator'
  - '@azure/storage-file.CopyStatusType'
  - '@azure/storage-file.DeleteSnapshotsOptionType'
  - '@azure/storage-file.DirectoryCreateResponse'
  - '@azure/storage-file.DirectoryDeleteResponse'
  - '@azure/storage-file.DirectoryForceCloseHandlesResponse'
  - '@azure/storage-file.DirectoryGetPropertiesResponse'
  - '@azure/storage-file.DirectoryListFilesAndDirectoriesSegmentResponse'
  - '@azure/storage-file.DirectoryListHandlesResponse'
  - '@azure/storage-file.DirectorySetMetadataResponse'
  - '@azure/storage-file.DirectorySetPropertiesResponse'
  - '@azure/storage-file.FileAbortCopyResponse'
  - '@azure/storage-file.FileCreateResponse'
  - '@azure/storage-file.FileDeleteResponse'
  - '@azure/storage-file.FileForceCloseHandlesResponse'
  - '@azure/storage-file.FileGetPropertiesResponse'
  - '@azure/storage-file.FileListHandlesResponse'
  - '@azure/storage-file.FileRangeWriteType'
  - '@azure/storage-file.FileSetHTTPHeadersResponse'
  - '@azure/storage-file.FileSetMetadataResponse'
  - '@azure/storage-file.FileStartCopyResponse'
  - '@azure/storage-file.FileType'
  - '@azure/storage-file.FileUploadRangeFromURLResponse'
  - '@azure/storage-file.FileUploadRangeResponse'
  - '@azure/storage-file.ListSharesIncludeType'
  - '@azure/storage-file.ServiceGetPropertiesResponse'
  - '@azure/storage-file.ServiceListSharesSegmentResponse'
  - '@azure/storage-file.ServiceSetPropertiesResponse'
  - '@azure/storage-file.ShareCreatePermissionResponse'
  - '@azure/storage-file.ShareCreateResponse'
  - '@azure/storage-file.ShareCreateSnapshotResponse'
  - '@azure/storage-file.ShareDeleteResponse'
  - '@azure/storage-file.ShareGetPermissionResponse'
  - '@azure/storage-file.ShareGetPropertiesResponse'
  - '@azure/storage-file.ShareSetAccessPolicyResponse'
  - '@azure/storage-file.ShareSetMetadataResponse'
  - '@azure/storage-file.ShareSetQuotaResponse'
  - '@azure/storage-file.StorageErrorCode'
  - '@azure/storage-file.FileAttributesPreserveType'
  - '@azure/storage-file.FilePermissionInheritType'
  - '@azure/storage-file.FilePermissionPreserveType'
  - '@azure/storage-file.TimeNowType'
  - '@azure/storage-file.TimePreserveType'
  - '@azure/storage-file.Operation'
  - '@azure/storage-file.OutgoingHandler'
  - '@azure/storage-file.ReadableStreamGetter'
functions:
  - name: >-
      generateAccountSASQueryParameters(IAccountSASSignatureValues,
      SharedKeyCredential)
    uid: '@azure/storage-file.generateAccountSASQueryParameters'
    package: '@azure/storage-file'
    summary: >-
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Generates a <xref:@azure/storage-file.SASQueryParameters> object which
      contains all SAS query parameters needed to make an actual

      REST request.



      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateAccountSASQueryParameters(accountSASSignatureValues:
        IAccountSASSignatureValues, sharedKeyCredential: SharedKeyCredential):
        SASQueryParameters
      parameters:
        - id: accountSASSignatureValues
          type: <xref uid="@azure/storage-file.IAccountSASSignatureValues" />
          description: ''
        - id: sharedKeyCredential
          type: <xref uid="@azure/storage-file.SharedKeyCredential" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-file.SASQueryParameters" />
  - name: >-
      generateFileSASQueryParameters(IFileSASSignatureValues,
      SharedKeyCredential)
    uid: '@azure/storage-file.generateFileSASQueryParameters'
    package: '@azure/storage-file'
    summary: >
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Creates an instance of SASQueryParameters.


      Only accepts required settings needed to create a SAS. For optional
      settings please

      set corresponding properties directly, such as permissions, startTime and
      identifier.


      WARNING: When identifier is not provided, permissions and expiryTime are
      required.

      You MUST assign value to identifier or expiryTime & permissions manually
      if you initial with

      this constructor.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function generateFileSASQueryParameters(fileSASSignatureValues:
        IFileSASSignatureValues, sharedKeyCredential: SharedKeyCredential):
        SASQueryParameters
      parameters:
        - id: fileSASSignatureValues
          type: <xref uid="@azure/storage-file.IFileSASSignatureValues" />
          description: ''
        - id: sharedKeyCredential
          type: <xref uid="@azure/storage-file.SharedKeyCredential" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-file.SASQueryParameters" />
  - name: ipRangeToString(IIPRange)
    uid: '@azure/storage-file.ipRangeToString'
    package: '@azure/storage-file'
    summary: |
      Generate IPRange format string. For example:
      "8.8.8.8" or "1.1.1.1-255.255.255.255"
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function ipRangeToString(ipRange: IIPRange): string'
      parameters:
        - id: ipRange
          type: <xref uid="@azure/storage-file.IIPRange" />
          description: ''
      return:
        description: ''
        type: string
  - name: rangeToString(IRange)
    uid: '@azure/storage-file.rangeToString'
    package: '@azure/storage-file'
    summary: |
      Generate a range string. For example:
      "bytes=255-" or "bytes=0-511"
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function rangeToString(iRange: IRange): string'
      parameters:
        - id: iRange
          type: <xref uid="@azure/storage-file.IRange" />
          description: ''
      return:
        description: ''
        type: string
  - name: >-
      uploadBrowserDataToAzureFile(Aborter, Blob | ArrayBuffer |
      ArrayBufferView, FileURL, IUploadToAzureFileOptions)
    uid: '@azure/storage-file.uploadBrowserDataToAzureFile'
    package: '@azure/storage-file'
    summary: >
      ONLY AVAILABLE IN BROWSERS.

      Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to an Azure
      File.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function uploadBrowserDataToAzureFile(aborter: Aborter, browserData:
        Blob | ArrayBuffer | ArrayBufferView, fileURL: FileURL, options?:
        IUploadToAzureFileOptions): Promise<void>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: browserData
          type: Blob | ArrayBuffer | ArrayBufferView
          description: 'Blob, File, ArrayBuffer or ArrayBufferView'
        - id: fileURL
          type: <xref uid="@azure/storage-file.FileURL" />
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file.IUploadToAzureFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      downloadAzureFileToBuffer(Aborter, Buffer, FileURL, number, undefined |
      number, IDownloadFromAzureFileOptions)
    uid: '@azure/storage-file.downloadAzureFileToBuffer'
    package: '@azure/storage-file'
    summary: >
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Downloads an Azure file in parallel to a buffer.

      Offset and count are optional, pass 0 for both to download the entire
      file.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function downloadAzureFileToBuffer(aborter: Aborter, buffer: Buffer,
        fileURL: FileURL, offset: number, count?: undefined | number, options?:
        IDownloadFromAzureFileOptions): Promise<void>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: buffer
          type: Buffer
          description: 'Buffer to be fill, must have length larger than count'
        - id: fileURL
          type: <xref uid="@azure/storage-file.FileURL" />
          description: A FileURL object
        - id: offset
          type: number
          description: From which position of the Azure File to download
        - id: count
          type: undefined | number
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file.IDownloadFromAzureFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'uploadFileToAzureFile(Aborter, string, FileURL, IUploadToAzureFileOptions)'
    uid: '@azure/storage-file.uploadFileToAzureFile'
    package: '@azure/storage-file'
    summary: |
      ONLY AVAILABLE IN NODE.JS RUNTIME.
      Uploads a local file to an Azure file.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function uploadFileToAzureFile(aborter: Aborter, filePath: string,
        fileURL: FileURL, options?: IUploadToAzureFileOptions): Promise<void>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: filePath
          type: string
          description: Full path of local file
        - id: fileURL
          type: <xref uid="@azure/storage-file.FileURL" />
          description: FileURL
        - id: options
          type: <xref uid="@azure/storage-file.IUploadToAzureFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      uploadStreamToAzureFile(Aborter, Readable, number, FileURL, number,
      number, IUploadStreamToAzureFileOptions)
    uid: '@azure/storage-file.uploadStreamToAzureFile'
    package: '@azure/storage-file'
    summary: >
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Uploads a Node.js Readable stream into an Azure file.

      This method will try to create an Azure, then starts uploading chunk by
      chunk.

      Size of chunk is defined by `bufferSize` parameter.

      Please make sure potential size of stream doesn't exceed file size.


      PERFORMANCE IMPROVEMENT TIPS:

      * Input stream highWaterMark is better to set a same value with bufferSize
        parameter, which will avoid Buffer.concat() operations.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function uploadStreamToAzureFile(aborter: Aborter, stream: Readable,
        size: number, fileURL: FileURL, bufferSize: number, maxBuffers: number,
        options?: IUploadStreamToAzureFileOptions): Promise<void>
      parameters:
        - id: aborter
          type: <xref uid="@azure/storage-file.Aborter" />
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: stream
          type: Readable
          description: Node.js Readable stream. Must be less or equal than file size.
        - id: size
          type: number
          description: |-
            Size of file to be created. Maxium size allowed is 1TB.
                                 If this value is larger than stream size, there will be empty bytes in file tail.
        - id: fileURL
          type: <xref uid="@azure/storage-file.FileURL" />
          description: A FileURL instance
        - id: bufferSize
          type: number
          description: >-
            Size of every buffer allocated in bytes, also the chunk/range size
            during
                                       the uploaded file. Size must be > 0 and <= 4 * 1024 * 1024 (4MB)
        - id: maxBuffers
          type: number
          description: |-
            Max buffers will allocate during uploading, positive correlation
                                       with max uploading concurrency
        - id: options
          type: <xref uid="@azure/storage-file.IUploadStreamToAzureFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: fileAttributesToString(FileSystemAttributes | FileAttributesPreserveType)
    uid: '@azure/storage-file.fileAttributesToString'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fileAttributesToString(fileAttributes: FileSystemAttributes |
        FileAttributesPreserveType): string
      parameters:
        - id: fileAttributes
          type: >-
            <xref uid="@azure/storage-file.FileSystemAttributes" /> | <xref
            uid="@azure/storage-file.FileAttributesPreserveType" />
          description: ''
      return:
        description: ''
        type: string
  - name: fileCreationTimeToString(Date | TimeNowType | TimePreserveType)
    uid: '@azure/storage-file.fileCreationTimeToString'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fileCreationTimeToString(time: Date | TimeNowType |
        TimePreserveType): string
      parameters:
        - id: time
          type: >-
            Date | <xref uid="@azure/storage-file.TimeNowType" /> | <xref
            uid="@azure/storage-file.TimePreserveType" />
          description: ''
      return:
        description: ''
        type: string
  - name: fileLastWriteTimeToString(Date | TimeNowType | TimePreserveType)
    uid: '@azure/storage-file.fileLastWriteTimeToString'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function fileLastWriteTimeToString(time: Date | TimeNowType |
        TimePreserveType): string
      parameters:
        - id: time
          type: >-
            Date | <xref uid="@azure/storage-file.TimeNowType" /> | <xref
            uid="@azure/storage-file.TimePreserveType" />
          description: ''
      return:
        description: ''
        type: string
  - name: >-
      validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(IFileAndDirectoryCreateCommonOptions)
    uid: >-
      @azure/storage-file.validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(options:
        IFileAndDirectoryCreateCommonOptions):
        IFileAndDirectoryCreateCommonOptions
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-file.IFileAndDirectoryCreateCommonOptions"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/storage-file.IFileAndDirectoryCreateCommonOptions"
          />
  - name: >-
      validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(IFileAndDirectorySetPropertiesCommonOptions)
    uid: >-
      @azure/storage-file.validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(options:
        IFileAndDirectorySetPropertiesCommonOptions):
        IFileAndDirectorySetPropertiesCommonOptions
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/storage-file.IFileAndDirectorySetPropertiesCommonOptions"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref
          uid="@azure/storage-file.IFileAndDirectorySetPropertiesCommonOptions"
          />
  - name: 'validateFilePermissionOptions(undefined | string, undefined | string)'
    uid: '@azure/storage-file.validateFilePermissionOptions'
    package: '@azure/storage-file'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function validateFilePermissionOptions(filePermission?: undefined |
        string, filePermissionKey?: undefined | string)
      parameters:
        - id: filePermission
          type: undefined | string
          description: ''
        - id: filePermissionKey
          type: undefined | string
          description: ''
  - name: NewRetryPolicyFactory(IRetryOptions)
    uid: '@azure/storage-file.NewRetryPolicyFactory'
    package: '@azure/storage-file'
    summary: A factory method used to generated a RetryPolicy factory.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function NewRetryPolicyFactory(retryOptions?: IRetryOptions):
        RequestPolicyFactory
      parameters:
        - id: retryOptions
          type: <xref uid="@azure/storage-file.IRetryOptions" />
          description: ''
      return:
        description: ''
        type: RequestPolicyFactory
  - name: blobToArrayBuffer(Blob)
    uid: '@azure/storage-file.blobToArrayBuffer'
    package: '@azure/storage-file'
    summary: Convert a Browser Blob object into ArrayBuffer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function blobToArrayBuffer(blob: Blob): Promise<ArrayBuffer>'
      parameters:
        - id: blob
          type: Blob
          description: ''
      return:
        description: ''
        type: Promise&lt;ArrayBuffer&gt;
  - name: 'appendToURLPath(string, string)'
    uid: '@azure/storage-file.appendToURLPath'
    package: '@azure/storage-file'
    summary: >-
      Append a string to URL path. Will remove duplicated "/" in front of the
      string

      when URL path ends with a "/".
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function appendToURLPath(url: string, name: string): string'
      parameters:
        - id: url
          type: string
          description: Source URL string
        - id: name
          type: string
          description: String to be appended to URL
      return:
        description: An updated URL string
        type: string
  - name: base64decode(string)
    uid: '@azure/storage-file.base64decode'
    package: '@azure/storage-file'
    summary: Base64 decode.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function base64decode(encodedString: string): string'
      parameters:
        - id: encodedString
          type: string
          description: ''
      return:
        description: ''
        type: string
  - name: base64encode(string)
    uid: '@azure/storage-file.base64encode'
    package: '@azure/storage-file'
    summary: Base64 encode.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function base64encode(content: string): string'
      parameters:
        - id: content
          type: string
          description: ''
      return:
        description: ''
        type: string
  - name: 'delay(number, AbortSignalLike, Error)'
    uid: '@azure/storage-file.delay'
    package: '@azure/storage-file'
    summary: Delay specified time interval.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function delay(timeInMs: number, aborter?: AbortSignalLike, abortError?:
        Error): Promise<unknown>
      parameters:
        - id: timeInMs
          type: number
          description: ''
        - id: aborter
          type: AbortSignalLike
          description: ''
        - id: abortError
          type: Error
          description: ''
      return:
        description: ''
        type: Promise&lt;unknown&gt;
  - name: escapeURLPath(string)
    uid: '@azure/storage-file.escapeURLPath'
    package: '@azure/storage-file'
    summary: >-
      Reserved URL characters must be properly escaped for Storage services like
      Blob or File.

      ## URL encode and escape strategy for JSv10 SDKs


      When customers pass a URL string into XXXURL classes constructor, the URL
      string may already be URL encoded or not.

      But before sending to Azure Storage server, the URL must be encoded.
      However, it's hard for a SDK to guess whether the URL

      string has been encoded or not. We have 2 potential strategies, and chose
      strategy two for the XXXURL constructors.


      ### Strategy One: Assume the customer URL string is not encoded, and
      always encode URL string in SDK.


      This is what legacy V2 SDK does, simple and works for most of the cases.

      - When customer URL string is
      "http://account.blob.core.windows.net/con/b:",
        SDK will encode it to "http://account.blob.core.windows.net/con/b%3A" and send to server. A blob named "b:" will be created.
      - When customer URL string is
      "http://account.blob.core.windows.net/con/b%3A",
        SDK will encode it to "http://account.blob.core.windows.net/con/b%253A" and send to server. A blob named "b%3A" will be created.

      But this strategy will make it not possible to create a blob with "?" in
      it's name. Because when customer URL string is

      "http://account.blob.core.windows.net/con/blob?name", the "?name" will be
      treated as URL paramter instead of blob name.

      If customer URL string is
      "http://account.blob.core.windows.net/con/blob%3Fname", a blob named
      "blob%3Fname" will be created.

      V2 SDK doesn't have this issue because it doesn't allow customer pass in a
      full URL, it accepts a separate blob name and encodeURIComponent for it.

      We cannot accept a SDK cannot create a blob name with "?". So we implement
      strategy two:


      ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It
      will just escape the special characters.


      This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call
      url.EscapedPath() to escape the special chars unescaped.

      - When customer URL string is
      "http://account.blob.core.windows.net/con/b:",
        SDK will escape ":" like "http://account.blob.core.windows.net/con/b%3A" and send to server. A blob named "b:" will be created.
      - When customer URL string is
      "http://account.blob.core.windows.net/con/b%3A",
        There is no special characters, so send "http://account.blob.core.windows.net/con/b%3A" to server. A blob named "b:" will be created.
      - When customer URL string is
      "http://account.blob.core.windows.net/con/b%253A",
        There is no special characters, so send "http://account.blob.core.windows.net/con/b%253A" to server. A blob named "b%3A" will be created.

      This strategy gives us flexibility to create with any special characters.
      But "%" will be treated as a special characters, if the URL string

      is not encoded, there shouldn't a "%" in the URL string, otherwise the URL
      is not a valid URL.

      If customer needs to create a blob with "%" in it's blob name, use "%25"
      insead of "%". Just like above 3rd sample.

      And following URL strings are invalid:

      - "http://account.blob.core.windows.net/con/b%"

      - "http://account.blob.core.windows.net/con/b%2"

      - "http://account.blob.core.windows.net/con/b%G"


      Another special character is "?", use "%2F" to represent a blob name with
      "?" in a URL string.


      ### Strategy for containerName, blobName or other specific XXXName
      parameters in methods such as `BlobURL.fromContainerURL(containerURL,
      blobName)`


      We will apply strategy one, and call encodeURIComponent for these
      parameters like blobName. Because what customers passes in is a plain name
      instead of a URL.



      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata


      See
      https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function escapeURLPath(url: string): string'
      parameters:
        - id: url
          type: string
          description: ''
      return:
        description: ''
        type: string
  - name: 'getURLParameter(string, string)'
    uid: '@azure/storage-file.getURLParameter'
    package: '@azure/storage-file'
    summary: Get URL parameter by name.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getURLParameter(url: string, name: string): string | string[] |
        undefined
      parameters:
        - id: url
          type: string
          description: ''
        - id: name
          type: string
          description: ''
      return:
        description: ''
        type: 'string | string[] | undefined'
  - name: getURLPath(string)
    uid: '@azure/storage-file.getURLPath'
    package: '@azure/storage-file'
    summary: Get URL path from an URL string.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getURLPath(url: string): string | undefined'
      parameters:
        - id: url
          type: string
          description: Source URL string
      return:
        description: ''
        type: string | undefined
  - name: getURLQueries(string)
    uid: '@azure/storage-file.getURLQueries'
    package: '@azure/storage-file'
    summary: Get URL query key value pairs from an URL string.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getURLQueries(url: string): [key: string]: string'
      parameters:
        - id: url
          type: string
          description: ''
      return:
        description: ''
        type: '[key: string]\: string'
  - name: 'padStart(string, number, undefined | string)'
    uid: '@azure/storage-file.padStart'
    package: '@azure/storage-file'
    summary: String.prototype.padStart()
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function padStart(currentString: string, targetLength: number,
        padString?: undefined | string): string
      parameters:
        - id: currentString
          type: string
          description: ''
        - id: targetLength
          type: number
          description: ''
        - id: padString
          type: undefined | string
          description: ''
      return:
        description: ''
        type: string
  - name: 'setURLHost(string, string)'
    uid: '@azure/storage-file.setURLHost'
    package: '@azure/storage-file'
    summary: Set URL host.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setURLHost(url: string, host: string): string'
      parameters:
        - id: url
          type: string
          description: Source URL string
        - id: host
          type: string
          description: New host string
      return:
        description: An updated URL string
        type: string
  - name: 'setURLParameter(string, string, undefined | string)'
    uid: '@azure/storage-file.setURLParameter'
    package: '@azure/storage-file'
    summary: >-
      Set URL parameter name and value. If name exists in URL parameters, old
      value

      will be replaced by name key. If not provide value, the parameter will be
      deleted.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setURLParameter(url: string, name: string, value?: undefined |
        string): string
      parameters:
        - id: url
          type: string
          description: Source URL string
        - id: name
          type: string
          description: Parameter name
        - id: value
          type: undefined | string
          description: ''
      return:
        description: An updated URL string
        type: string
  - name: 'truncatedISO8061Date(Date, undefined | false | true)'
    uid: '@azure/storage-file.truncatedISO8061Date'
    package: '@azure/storage-file'
    summary: Rounds a date off to seconds.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function truncatedISO8061Date(date: Date, withMilliseconds?: undefined |
        false | true): string
      parameters:
        - id: date
          type: Date
          description: ''
        - id: withMilliseconds
          type: undefined | false | true
          description: ''
      return:
        description: >-
          Date string in ISO8061 format, with or without 7 milliseconds
          component
        type: string
  - name: >-
      streamToBuffer(NodeJS.ReadableStream, Buffer, number, number, undefined |
      string)
    uid: '@azure/storage-file.streamToBuffer'
    package: '@azure/storage-file'
    summary: Reads a readable stream into buffer. Fill the buffer from offset to end.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function streamToBuffer(stream: NodeJS.ReadableStream, buffer: Buffer,
        offset: number, end: number, encoding?: undefined | string):
        Promise<void>
      parameters:
        - id: stream
          type: <xref uid="NodeJS.ReadableStream" />
          description: A Node.js Readable stream
        - id: buffer
          type: Buffer
          description: 'Buffer to be filled, length must >= offset'
        - id: offset
          type: number
          description: 'From which position in the buffer to be filled, inclusive'
        - id: end
          type: number
          description: 'To which position in the buffer to be filled, exclusive'
        - id: encoding
          type: undefined | string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
enums:
  - '@azure/storage-file.SASProtocol'
  - '@azure/storage-file.RetryPolicyType'
